/// <summary>/// A singly linked stack implementation./// </summary>public class LinkedStack : IStackADT{	private Node top;	public LinkedStack()	{		top = null; // Empty stack condition	}	public object Push(object newItem)	{		if (newItem == null)		{			return null;		}		Node newNode = new Node(newItem,top);		top = newNode;		return newItem;	}	public object Pop()	{		if (Empty)		{			return null;		}		object topItem = top.Data;		top = top.Next;		return topItem;	}	public object Peek()	{		if (Empty)		{			return null;		}		return top.Data;	}	public bool Empty	{		get		{			return top == null;		}	}	public void Clear()	{		top = null;	}}